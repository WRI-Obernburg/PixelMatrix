#include <Arduino.h>
#include "system/SystemManager.h"
#include "applications/Tim/ChessAnimation.h"
#include "applications/Tim/HelloRobo.h"
#include "applications/Tim/Rainbow.h"
#include "applications/Tim/Snake.h"
#include "applications/Tim/CircleAnimation.h"
#include "applications/Tim/Pumpkin.h"
#include "applications/Totem/Totem.h"
#include "applications/PixelRunner.h"

SystemManager *sm  = new SystemManager();
const static unsigned char prg_test[] PROGMEM = {0x05,0x05,0x01,0x00,0x00,0x6D,0x00,0x73,0xD3,0xB1,0x16,0x00,0x00,0x01,0x00,0x00,0x6E,0x00,0x56,0xF0,0xEE,0x84,0x00,0x00,0x01,0x00,0x00,0x8A,0x00,0x13,0xF4,0x8B,0xA8,0x00,0x00,0x01,0x00,0x00,0x8B,0x00,0x66,0xD3,0x1F,0x4B,0x00,0x00,0x01,0x00,0x00,0x8C,0x00,0x57,0x46,0xF9,0x14,0x01,0x00,0x02,0xEC,0x90,0x05,0x22,0x8C,0x58,0xEA,0xCF,0xF9,0xCF,0x02,0x62,0xDD,0x83,0x91,0x78,0x2D,0x33,0x54,0xAE,0xD6,0x00,0x27,0x9C,0x00,0x00,0xD6,0x01,0x00,0x00,0xFF,0x00,0xD6,0x02,0x00,0xFF,0xFF,0x00,0xD0,0x03,0x9C,0x6A,0xD6,0x04,0x00,0x60,0x8A,0x00,0x02,0xEF,0x14,0x12,0x04,0x0A,0x00,0x50,0x6F,0x69,0x6E,0x74,0x73,0x3A,0x20,0x25,0x64,0xAF,0x7B,0x09,0x02,0x1F,0xC7,0x2E,0x80,0x06,0x01,0x7E,0xC4,0xF7,0x17,0x12,0x12,0x12,0x12,0x07,0x18,0x16,0x16};
const static unsigned char prg_super_racer[] PROGMEM = {0x0A,0x06,0x01,0x00,0x00,0x91,0x00,0x73,0xD3,0xB1,0x16,0x00,0x00,0x01,0x00,0x00,0xA0,0x00,0x56,0xF0,0xEE,0x84,0x00,0x03,0x04,0x00,0x00,0xFE,0x01,0x13,0xF4,0x8B,0xA8,0x00,0x02,0x03,0x00,0x00,0xA2,0x02,0x66,0xD3,0x1F,0x4B,0x00,0x00,0x01,0x00,0x00,0xA3,0x02,0x57,0x46,0xF9,0x14,0x01,0x00,0x02,0x00,0x00,0xD6,0x02,0xC0,0x33,0x0D,0x65,0x00,0x03,0x04,0xE8,0x08,0x0D,0x8F,0x67,0x37,0xB6,0x3F,0x76,0x4D,0xF8,0xFD,0x09,0x4F,0xF8,0xFE,0x6F,0x94,0x8D,0x11,0xB6,0xB9,0xBA,0xEB,0x90,0xC7,0x76,0x98,0x16,0xB7,0x8E,0xF2,0x5F,0x86,0x82,0xBF,0x12,0x21,0x40,0xBB,0xB4,0x00,0x0C,0xB1,0x0D,0x11,0x20,0x01,0xAF,0x0C,0xF3,0x11,0xCF,0x02,0x06,0xCF,0x03,0x02,0xCF,0x04,0x04,0xCF,0x05,0x02,0xCF,0x06,0x00,0xCF,0x07,0x00,0xCF,0x08,0x00,0x02,0xEF,0x14,0x07,0x00,0x05,0x03,0x58,0x11,0xAF,0x0A,0x06,0x01,0xAE,0x48,0x91,0x3E,0x12,0x20,0x08,0x39,0x03,0x09,0x12,0x90,0x07,0x05,0x00,0x60,0x64,0x74,0x93,0x39,0x03,0x09,0x12,0xAF,0x0A,0x05,0x00,0xD3,0x88,0xC8,0x8D,0x2D,0x03,0xF4,0xFD,0x54,0x3C,0x2D,0x05,0x00,0xD3,0x88,0xC8,0x8D,0x34,0x06,0x01,0xF9,0x92,0x94,0x32,0x04,0x0A,0x00,0x50,0x6F,0x69,0x6E,0x74,0x73,0x3A,0x20,0x25,0x64,0x20,0x07,0x09,0x02,0x1F,0xC7,0x2E,0x80,0x06,0x01,0x7E,0xC4,0xF7,0x17,0x02,0x58,0x05,0xAF,0x04,0x02,0xAF,0x0A,0x05,0x02,0x62,0x0C,0x4F,0x14,0x3E,0xCC,0x28,0x09,0xAF,0x04,0x02,0xAF,0x09,0x05,0x02,0x62,0x0C,0x4F,0x14,0xC9,0x0F,0x09,0x02,0x6E,0x04,0x07,0x09,0x91,0x04,0xCF,0x05,0x07,0x37,0x0D,0x09,0xAF,0x06,0x70,0x04,0x07,0x09,0x90,0x04,0xCF,0x05,0x07,0x91,0x05,0xD2,0x00,0x00,0xAF,0x0C,0x71,0x00,0x29,0xFF,0xD2,0x01,0x00,0xAF,0x0C,0x71,0x01,0x1B,0x09,0x22,0x01,0x00,0x17,0x1F,0x00,0x16,0x22,0x01,0x00,0x17,0xAF,0x01,0x1F,0x00,0x34,0x16,0x1D,0x02,0x95,0x92,0x01,0x37,0xE3,0x09,0x92,0x00,0x37,0xD5,0x09,0xD2,0x02,0x00,0xAF,0x0C,0x71,0x02,0x11,0x09,0x22,0x02,0x00,0x17,0xB1,0x0C,0x02,0x1D,0x02,0x95,0x92,0x02,0x37,0xED,0x09,0x24,0x04,0x00,0x17,0xB1,0x0C,0xAF,0x01,0x1D,0x02,0x95,0xB0,0x2C,0x01,0x6E,0x07,0x08,0x09,0xCF,0x09,0x04,0x37,0x05,0x09,0xCF,0x09,0x05,0x20,0x00,0xDA,0x09,0x04,0x16,0xB1,0x0C,0xAF,0x01,0x1D,0x02,0x95,0xAF,0x03,0x6A,0x06,0x05,0x09,0xCF,0x06,0x00,0xD2,0x02,0x00,0xAF,0x0C,0x71,0x02,0x22,0xFE,0x22,0x02,0x01,0x17,0x02,0x1D,0x02,0x95,0xAF,0x03,0xDB,0x02,0x06,0x30,0x02,0xC5,0x0B,0x09,0x22,0x02,0x01,0x17,0xAF,0x01,0x1D,0x02,0x95,0x92,0x02,0x37,0xDC,0x09,0x90,0x06,0x24,0x02,0x00,0x17,0x20,0x03,0x16,0x24,0x02,0x00,0x17,0xAF,0x01,0x20,0x03,0x34,0x16,0xCE,0x24,0x09,0xCF,0x08,0x01,0xAF,0x20,0x06,0x01,0xAE,0x48,0x91,0x3E,0x20,0x02,0x20,0x03,0x01,0x00,0x00,0xFF,0x00,0xAF,0x01,0xB0,0xE8,0x03,0xB0,0xE8,0x03,0x06,0x06,0x77,0xDA,0x09,0xE4,0x12,0x05,0x00,0x60,0x64,0x74,0x93,0x39,0x03,0x09,0x12,0x20,0x08,0x39,0x1A,0x09,0x06,0x00,0x1A,0xFD,0xFA,0x30,0xAF,0x01,0xAF,0x04,0x20,0x07,0x01,0x00,0x00,0xFF,0x00,0x06,0x04,0x15,0x02,0xE2,0x95,0x12,0xD2,0x00,0x00,0xAF,0x0C,0x71,0x00,0x54,0x09,0xD2,0x01,0x00,0xAF,0x0C,0x71,0x01,0x46,0x09,0x22,0x01,0x00,0x17,0x1F,0x00,0x16,0x39,0x2D,0x09,0x22,0x00,0x01,0x17,0x39,0x14,0x09,0x1F,0x01,0x1F,0x00,0x01,0x00,0xFF,0x00,0x00,0x06,0x03,0x44,0xD7,0xB5,0x99,0x37,0x11,0x09,0x1F,0x01,0x1F,0x00,0x01,0xFF,0xFF,0xFF,0x00,0x06,0x03,0x44,0xD7,0xB5,0x99,0x37,0x0C,0x09,0x1F,0x01,0x1F,0x00,0x06,0x02,0x35,0x6F,0xC5,0x63,0x92,0x01,0x37,0xB8,0x09,0x92,0x00,0x37,0xAA,0x09,0x20,0x02,0x20,0x03,0x01,0x00,0x00,0xFF,0x00,0x06,0x03,0x44,0xD7,0xB5,0x99,0x20,0x02,0xAF,0x01,0x20,0x03,0x34,0x01,0x00,0x00,0xFF,0x00,0x06,0x03,0x44,0xD7,0xB5,0x99,0x12,0x12,0xAF,0x02,0x67,0x00,0x09,0x09,0x02,0x6E,0x02,0x04,0x09,0x91,0x02,0xAF,0x03,0x67,0x00,0x0A,0x09,0xAF,0x0B,0x70,0x02,0x04,0x09,0x90,0x02,0xAF,0x05,0x67,0x00,0x13,0x09,0xCF,0x08,0x00,0x07,0x00,0x05,0x03,0x58,0x11,0xAF,0x0A,0x06,0x01,0xAE,0x48,0x91,0x3E,0x12,0xCF,0x02,0x05,0xCF,0x03,0x02,0xCF,0x04,0x04,0xCF,0x05,0x02,0xCF,0x06,0x00,0xCF,0x07,0x00,0xD2,0x00,0x00,0xAF,0x0C,0x71,0x00,0x34,0x09,0xD2,0x01,0x00,0xAF,0x0D,0x71,0x01,0x26,0x09,0x22,0x00,0x00,0x17,0x1F,0x01,0x16,0xAF,0x0C,0x4F,0x01,0xAF,0x05,0x20,0x04,0x34,0x20,0x04,0x1F,0x00,0x3C,0x1D,0x02,0x1F,0x00,0x3D,0x3B,0x3A,0x1D,0x02,0x95,0x92,0x01,0x37,0xD8,0x09,0x92,0x00,0x37,0xCA,0x09,0xD2,0x02,0x00,0xAF,0x0C,0x71,0x02,0x0F,0x09,0x22,0x02,0x01,0x17,0x02,0x1D,0x02,0x95,0x92,0x02,0x37,0xEF,0x09,0xAF,0x0A,0x06,0x01,0xF9,0x92,0x94,0x32,0x12,0x3A,0x38,0xC5,0x51};
void setup()
{


  sm->register_application(ChessAnimation::create, F("Chess Animation"), F("Tim"));
  sm->register_application(HelloRobo::create, F("HelloRobo"), F("Tim"));
  sm->register_wrench(prg_super_racer, 838, F("SuperRacer"), F("Tim"));
  sm->register_application(Snake::create, F("Snake"), F("Tim"));
  sm->register_application(Rainbow::create, F("Rainbow"), F("Tim"));
  sm->register_application(CircleAnimation::create, F("Circle Animation"), F("Tim"));
  sm->register_application(Pumpkin::create, F("Pumpkin"), F("Tim"));
  sm->register_application(Totem::create, F("Totem"), F("Insert name here"));
  sm->register_application(PixelRunner::create, F("PixelRunner"), F("Pixel Runners"));

  sm->register_wrench(prg_test, 145, F("Wrench"), F("Tim"));


  sm->init();

  sm->switch_project(0);
  Serial.println(ESP.getResetInfo());
}

void loop()
{
  sm->loop();
}
